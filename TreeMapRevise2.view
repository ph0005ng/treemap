<<<<<<<=view-json=
{
  "id":"TreeMapRevise2",
  "name":"TreeMapRevise2",
  "category":"Chart",
  "default":{
    "jsonClass":"View",
    "elxType":"View",
    "vtype":"bundle",
    "state":"visible",
    "isContainer":false,
    "position":{
      "jsonClass":"Position",
      "elxType":"Position",
      "height":"420",
      "width":"670",
      "zIndex":"auto"
    },
    "data":{
      "jsonClass":"DataEmbedded",
      "datasource":{
        "jsonClass":"DataSource",
        "name":"initData",
        "stype":"Data",
        "desc":"default data",
        "schema":{
          "jsonClass":"Schema",
          "caseSensitive":false,
          "columns":[
            {
              "jsonClass":"SchemaColumn",
              "name":"Item_PK",
              "dtype":"String",
              "attrs":[
                {
                  "jsonClass":"PrimaryKey",
                  "name":"PrimaryKey"
                }
              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Category",
              "dtype":"String",
              "attrs":[
                {
                  "jsonClass":"PrimaryKey",
                  "name":"PrimaryKey"
                }
              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Level1",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Level2",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Level3",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Level4",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Level5",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Description",
              "dtype":"String",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"SKU",
              "dtype":"Double",
              "attrs":[

              ]
            },
            {
              "jsonClass":"SchemaColumn",
              "name":"Size",
              "dtype":"Double",
              "attrs":[

              ]
            }
          ]
        },
        "data":{
          "jsonClass":"DataRecords",
          "records":[
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":1
                },
                {
                  "jsonClass":"Field",
                  "value":"Watermelon"
                },
                {
                  "jsonClass":"Field",
                  "value":"Fruits and veg"
                },
                {
                  "jsonClass":"Field",
                  "value":"Thailand"
                },
                {
                  "jsonClass":"Field",
                  "value":"Bangkok"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Watermelon"
                },
                {
                  "jsonClass":"Field",
                  "value":259
                },
                {
                  "jsonClass":"Field",
                  "value":2000
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":2
                },
                {
                  "jsonClass":"Field",
                  "value":"Apple"
                },
                {
                  "jsonClass":"Field",
                  "value":"Fruits and veg"
                },
                {
                  "jsonClass":"Field",
                  "value":"Thailand"
                },
                {
                  "jsonClass":"Field",
                  "value":"Pattaya"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Apple"
                },
                {
                  "jsonClass":"Field",
                  "value":375
                },
                {
                  "jsonClass":"Field",
                  "value":25000
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":3
                },
                {
                  "jsonClass":"Field",
                  "value":"Onion"
                },
                {
                  "jsonClass":"Field",
                  "value":"Fruits and veg"
                },
                {
                  "jsonClass":"Field",
                  "value":"Malaysia"
                },
                {
                  "jsonClass":"Field",
                  "value":"Johor"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Onion"
                },
                {
                  "jsonClass":"Field",
                  "value":894
                },
                {
                  "jsonClass":"Field",
                  "value":10500
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":4
                },
                {
                  "jsonClass":"Field",
                  "value":"Carrot"
                },
                {
                  "jsonClass":"Field",
                  "value":"Fruits and veg"
                },
                {
                  "jsonClass":"Field",
                  "value":"Malaysia"
                },
                {
                  "jsonClass":"Field",
                  "value":"Johor"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Carrot"
                },
                {
                  "jsonClass":"Field",
                  "value":417
                },
                {
                  "jsonClass":"Field",
                  "value":20410
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":5
                },
                {
                  "jsonClass":"Field",
                  "value":"Pear"
                },
                {
                  "jsonClass":"Field",
                  "value":"Fruits and veg"
                },
                {
                  "jsonClass":"Field",
                  "value":"Malaysia"
                },
                {
                  "jsonClass":"Field",
                  "value":"Pahang"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Pear"
                },
                {
                  "jsonClass":"Field",
                  "value":657
                },
                {
                  "jsonClass":"Field",
                  "value":6800
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":6
                },
                {
                  "jsonClass":"Field",
                  "value":"Keyboard"
                },
                {
                  "jsonClass":"Field",
                  "value":"Electronics"
                },
                {
                  "jsonClass":"Field",
                  "value":"Japan"
                },
                {
                  "jsonClass":"Field",
                  "value":"Tokyo"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Keyboard"
                },
                {
                  "jsonClass":"Field",
                  "value":517
                },
                {
                  "jsonClass":"Field",
                  "value":7800
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":7
                },
                {
                  "jsonClass":"Field",
                  "value":"Mouse"
                },
                {
                  "jsonClass":"Field",
                  "value":"Electronics"
                },
                {
                  "jsonClass":"Field",
                  "value":"Japan"
                },
                {
                  "jsonClass":"Field",
                  "value":"Osaka"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Mouse"
                },
                {
                  "jsonClass":"Field",
                  "value":789
                },
                {
                  "jsonClass":"Field",
                  "value":1800
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":8
                },
                {
                  "jsonClass":"Field",
                  "value":"Desktop"
                },
                {
                  "jsonClass":"Field",
                  "value":"Electronics"
                },
                {
                  "jsonClass":"Field",
                  "value":"USA"
                },
                {
                  "jsonClass":"Field",
                  "value":"Miami"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Desktop"
                },
                {
                  "jsonClass":"Field",
                  "value":841
                },
                {
                  "jsonClass":"Field",
                  "value":3570
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":9
                },
                {
                  "jsonClass":"Field",
                  "value":"Laptop"
                },
                {
                  "jsonClass":"Field",
                  "value":"Electronics"
                },
                {
                  "jsonClass":"Field",
                  "value":"USA"
                },
                {
                  "jsonClass":"Field",
                  "value":"Miami"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Laptop"
                },
                {
                  "jsonClass":"Field",
                  "value":985
                },
                {
                  "jsonClass":"Field",
                  "value":15000
                }
              ]
            },
            {
              "jsonClass":"Record",
              "fields":[
                {
                  "jsonClass":"Field",
                  "value":10
                },
                {
                  "jsonClass":"Field",
                  "value":"Tablet"
                },
                {
                  "jsonClass":"Field",
                  "value":"Electronics"
                },
                {
                  "jsonClass":"Field",
                  "value":"USA"
                },
                {
                  "jsonClass":"Field",
                  "value":"Boston"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"null"
                },
                {
                  "jsonClass":"Field",
                  "value":"Tablet"
                },
                {
                  "jsonClass":"Field",
                  "value":657
                },
                {
                  "jsonClass":"Field",
                  "value":18000
                }
              ]
            }
          ]
        }
      }, "hint":"directive-data-array",
      "directive":"IA0KICBmdW5jdGlvbiBkYXRhKCl7DQogIHZhciB1bmlUYWJsZSA9IHZpZXcuZGF0YS5maWVsZHNbMF0udGFibGUgKyAiLiI7DQogICANCiAgdmFyIHBrQ29sPXZpZXcudHlwZWluZm8uZGF0YS5maWVsZHMucGtDb2w7DQogICAgdmFyIGRlc0NvbD12aWV3LnR5cGVpbmZvLmRhdGEuZmllbGRzLmRlc0NvbDsNCiAgdmFyIGNvbG9yQmFzaXNDb2w9dmlldy50eXBlaW5mby5kYXRhLmZpZWxkcy5jb2xvckJhc2lzQ29sOw0KICB2YXIgdD12aWV3LnR5cGVpbmZvLmRhdGEuZmllbGRzLm9wZXJhYmxlLnZhbHVlczsgDQogIHZhciBrPXZpZXcudHlwZWluZm8uZGF0YS5maWVsZHMua2V5czsNCiAgdmFyIGNvbHVtbnM9W107IHZhciBvcGVyYXRpb25zPVtdOyB2YXIga2V5cz1bXTsNCiANCglwa0NvbC5mb3JFYWNoKGZ1bmN0aW9uKGQsaSkgew0KICBrZXlzLnB1c2goZC5uYW1lKTsNCiAgICAgfSkNCg0KICAgICBkZXNDb2wuZm9yRWFjaChmdW5jdGlvbihkLGkpIHsNCiAga2V5cy5wdXNoKGQubmFtZSk7DQogICAgfSkNCiAJY29sb3JCYXNpc0NvbC5mb3JFYWNoKGZ1bmN0aW9uKGQsaSkgew0KICBrZXlzLnB1c2goZC5uYW1lKTsNCiAgICB9KQ0KICAgIGsuZm9yRWFjaChmdW5jdGlvbihkLGkpIHsNCiAgICBrZXlzLnB1c2goZC5uYW1lKTt9KQ0KICANCiAgICB0LmZvckVhY2goZnVuY3Rpb24oZCxpKSB7DQogIGNvbHVtbnMucHVzaChkLm5hbWUpOw0KICAgIG9wZXJhdGlvbnMucHVzaChkLm9wKTsNCiAgfSkNCiANCiAgICAgcmV0dXJuIHJvd3MuZ3JvdXBCeShrZXlzLGNvbHVtbnMsb3BlcmF0aW9ucyk7DQp9DQpkYXRhKCk7"
    },
    "typeinfo":{
      "jsonClass":"Bundle",
      "type":"TreeMapRevise2",
      "data":{
        "series":{
          "sort":"series-asc"
        },
        "keys":{
          "sort":"key-asc"
        },
        "fields":{
          "pkCol":[
            {
              "name":"Item_PK",
              "id":"|"
            }
          ],
           "desCol":[
            {
              "name":"Description",
              "id":"|"
            }
          ],
          "colorBasisCol":[
            {
              "name":"ColorBasis",
              "id":"|"
            }
          ],  "keys":[{
            "name":"Level1"
          }],
          "operable":{
            "values":[
              {
                "id":"Size",
                "name":"SIZE",
                "op":"sum"
              }
            ]
          }
        }
      },
      "width":"1000",
      "height":"800",
      "marginB":"0",
      "marginT":"30",
      "marginL":"170",
      "marginR":"20",
      "labelWidth":"200",
      "labelHeight":"100",
      "title":"14 Stock Group",
      "prefixMagnitude":"prefixMagnitude={'Size':1000}",
      "formatValue":"formatValue={'Size':function(val) {return ' '+d3.round(prefix('Size').scale(val),2)+prefix('Size').symbol;}}",
       "cellName":"level#1"
    }
  },
  "includes":[
    "/elx/lib/treemapRevised.js",
    "/elx/lib/browserdetect.js"
  ],
  "edit-section":[
    {
      "id":"view",
      "name":"View"
    },
    {
      "id":"data",
      "name":"Data"
    },
    {
      "id":"TreeMapRevise2",
      "name":"TreeMapRevise2"
    },
    {
      "id":"filters",
      "name":"Filters"
    }
  ]
}
========
<<<<<<<=edit-json=
{
  "jsonClass":"ViewSection",
  "id":"TreeMapRevise2",
  "rows":[{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-height-label",
      "type":"label",
      "text":"Chart Height"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-height",
      "type":"field",
      "value":"${typeinfo.height}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-width-label",
      "type":"label",
      "text":"Chart Width"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-width",
      "type":"field",
      "value":"${typeinfo.width}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-pkCol-label",
      "type":"label",
      "text":"Identical will be Aggregated"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-data-pkCol",
      "type":"select-schema-column",
      "value":"${typeinfo.data.pkCol}"
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-desCol-label",
      "type":"label",
      "text":"Description Column"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-data-desCol",
      "type":"select-schema-column",
      "value":"${typeinfo.data.desCol}"
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-colorBasisCol-label",
      "type":"label",
      "text":"ColorBasis Column"
    },{
      "jsonClass":"SchemaColumnSelect",
      "id":"typeinfo-data-colorBasisCol",
      "type":"select-schema-column",
      "value":"${typeinfo.data.colorBasisCol}"
    }]
  },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-cellName-label",
        "type":"label",
        "text":"Cell Name"
      },{
        "jsonClass":"Select",
        "id":"typeinfo-cellName",
        "type":"select",
        "value":"${typeinfo.cellName}",
        "options":[{
          "jsonClass":"Option",
          "text":"content#1",
          "value":"content#1"
        },{
          "jsonClass":"Option",
          "text":"content#2",
          "value":"content#2"
        },{
          "jsonClass":"Option",
          "text":"content#3",
          "value":"content#3"
        },{
          "jsonClass":"Option",
          "text":"level#1",
          "value":"level#1"
        },{
          "jsonClass":"Option",
          "text":"level#2",
          "value":"level#2"
        },{
          "jsonClass":"Option",
          "text":"level#3",
          "value":"level#3"
        },{
          "jsonClass":"Option",
          "text":"Item_PK",
          "value":"Item_PK"
        }]
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-property-label",
        "type":"label",
        "text":"Keys"
      },{
        "jsonClass":"Div",
        "id":"typeinfo-property"
      }]
    },{
      "jsonClass":"Row",
      "cols":[{
        "jsonClass":"Label",
        "id":"typeinfo-data-fields-operable-values-label",
        "type":"label",
        "text":"Column"
      },{
        "jsonClass":"Div",
        "id":"typeinfo-data-fields-operable-values"
      }]
    },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-marginL-label",
      "type":"label",
      "text":"Left margin"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-marginL",
      "type":"field",
      "value":"${typeinfo.marginL}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-marginR-label",
      "type":"label",
      "text":"Right margin"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-marginR",
      "type":"field",
      "value":"${typeinfo.marginR}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-marginT-label",
      "type":"label",
      "text":"Top margin"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-marginT",
      "type":"field",
      "value":"${typeinfo.marginT}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-marginB-label",
      "type":"label",
      "text":"Bottom margin"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-marginB",
      "type":"field",
      "value":"${typeinfo.marginB}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-labelWidth-label",
      "type":"label",
      "text":"Label Width"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-labelWidth",
      "type":"field",
      "value":"${typeinfo.labelWidth}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-labelHeight-label",
      "type":"label",
      "text":"Label Height"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-labelHeight",
      "type":"field",
      "value":"${typeinfo.labelHeight}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-title-label",
      "type":"label",
      "text":"Title"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-title",
      "type":"field",
      "value":"${typeinfo.title}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-prefixMagnitude-label",
      "type":"label",
      "text":"Prefix Magnitude"
    },,{
      "jsonClass":"Field",
      "id":"typeinfo-prefixMagnitude",
      "type":"field",
      "value":"${typeinfo.prefixMagnitude}",
      "readonly":false
    }]
  },{
    "jsonClass":"Row",
    "cols":[{
      "jsonClass":"Label",
      "id":"typeinfo-formatValue-label",
      "type":"label",
      "text":"Format Value"
    },{
      "jsonClass":"Field",
      "id":"typeinfo-formatValue",
      "type":"field",
      "value":"${typeinfo.formatValue}",
      "readonly":false
    }]
  }]
}
========
<<<<<<<=edit-js=
elx.bundle.type.TreeMapRevise2 = {

  	init : function(view) {
      
   
	  var dataOps =  elx.utils.getElxChartOperablesData(view, view.typeinfo.data.fields.operable.values);
   		var tableOp = new elx.MultiChartValueColumnSection("typeinfo-data-fields-operable-values-table",
                                                        "typeinfo-data-fields-operable-values", view, dataOps);
		$("#typeinfo-data-fields-operable-values-table").data("table",tableOp);
      
        $("#typeinfo-data-pkCol").val(view.typeinfo.data.fields.pkCol[0].name);
               $("#typeinfo-data-desCol").val(view.typeinfo.data.fields.desCol[0].name);
      $("#typeinfo-data-colorBasisCol").val(view.typeinfo.data.fields.colorBasisCol[0].name);
      	  var dataKey = elx.MultiKeyColumnSection.getKeyData(view,view.typeinfo.data.fields.keys);
           var tableKey=  new elx.MultiKeyColumnSection("typeinfo-property-keys","typeinfo-property", view, dataKey);
      $("#typeinfo-property-keys").data("table",tableKey);
          elx.host.utils.initSectionGroups(view,$("#TreeMapRevise2-div"));
      
	},

	validate : function(view) {
		return true;
	},

	save : function(view) {
      	var dataTableOp = $("#typeinfo-data-fields-operable-values-table").data("table");
       var dataOp = dataTableOp.table.getData();
          view.typeinfo.data.fields.operable.values = 
          elx.utils.buildElxChartOperablesData(view.typeinfo.data.fields.operable.values,dataOp);
      	elx.host.utils.saveProperties(view.typeinfo);
   	var dpkCol = $("#typeinfo-data-pkCol").val();
		view.typeinfo.data.fields.pkCol[0].name = dpkCol;
  
       var ddesCol = $("#typeinfo-data-desCol").val();
		view.typeinfo.data.fields.desCol[0].name = ddesCol;
      	var dcolorBasisCol = $("#typeinfo-data-colorBasisCol").val();
		view.typeinfo.data.fields.colorBasisCol[0].name = dcolorBasisCol;
      
       var dataTableKey = $("#typeinfo-property-keys").data("table");
        var dataKey = dataTableKey.table.getData();
        view.typeinfo.data.fields.keys = elx.MultiKeyColumnSection.buildKeyData(dataKey);
       elx.host.utils.saveProperties(view.typeinfo);
		
    }
	
}
========
<<<<<<<=view-html=
<style type='text/css'>
#${id}{overflow:hidden;margin:0;font-size:12px;font-family:"Helvetica Neue",Helvetica}.footer{z-index:1;display:block;font-size:26px;font-weight:200;text-shadow:0 1px 0 #fff}svg{overflow:hidden}rect{pointer-events:all;cursor:pointer;stroke:#EEE}.chart{display:block;margin:auto}.parent .label{color:#FFF;text-shadow:1px 1px 1px rgba(0,0,0,0.3);-webkit-text-shadow:1px 1px 1px rgba(0,0,0,0.3);-moz-text-shadow:1px 1px 1px rgba(0,0,0,0.3)}.labelbody{background:transparent}.label{margin:2px;white-space:pre;overflow:hidden;text-overflow:ellipsis;text-shadow:1px 1px 1px rgba(0,0,0,0.3);-webkit-text-shadow:1px 1px 1px rgba(0,0,0,0.3);-moz-text-shadow:1px 1px 1px rgba(0,0,0,0.3)}.child .label{white-space:pre-wrap;text-align:center;text-overflow:ellipsis}.cell{font-size:11px;cursor:pointer}

</style>

<div class="header_${id}">
</div>
<div id="${id}"></div>


	
<div class='elx-script'>
  /* data tab
   
  function data(){
  var uniTable = view.data.fields[0].table + ".";
   
  var pkCol=view.typeinfo.data.fields.pkCol;
    var desCol=view.typeinfo.data.fields.desCol;
  var colorBasisCol=view.typeinfo.data.fields.colorBasisCol;
  var t=view.typeinfo.data.fields.operable.values; 
  var k=view.typeinfo.data.fields.keys;
  var columns=[]; var operations=[]; var keys=[];
 
	pkCol.forEach(function(d,i) {
  keys.push(d.name);
     })

     desCol.forEach(function(d,i) {
  keys.push(d.name);
    })
 	colorBasisCol.forEach(function(d,i) {
  keys.push(d.name);
    })
    k.forEach(function(d,i) {
    keys.push(d.name);})
  
    t.forEach(function(d,i) {
  columns.push(d.name);
    operations.push(d.op);
  })
 
     return rows.groupBy(keys,columns,operations);
}
data();
  */
  //Preconfig Settings
    var cfgoptions = view.typeinfo;
	var chart,filterInitation,JsonProcess;
  var m = [cfgoptions.marginB, cfgoptions.marginL, cfgoptions.marginT, cfgoptions.marginR];
            var chartWidth = cfgoptions.width - m[1] - m[3];
              var chartHeight = cfgoptions.height - m[0] - m[2];
	var labelWidth=cfgoptions.labelWidth;
	var labelHeight=cfgoptions.labelHeight;
	var cellName=cfgoptions.cellName;
  var viewId=view.id;          
  window['treemap_'+viewId]={};
  window['treemap_'+viewId].node={};
  var xscale = d3.scale.linear().range([0, chartWidth]);
  var yscale = d3.scale.linear().range([0, chartHeight]);
  var color = d3.scale.category20();
  var headerHeight = 20;
  var headerColor = "#555555";
  var transitionDuration = 500;
  
 var prefixMagnitude;
  eval(view.typeinfo.prefixMagnitude);
  var prefix=function(Col) {return d3.formatPrefix(prefixMagnitude[Col]);};
var formatValue; 
  eval(view.typeinfo.formatValue);
   var contentSizeHex=0; //used in 'header' selection
   
  //browser Compatibility check
   window.isIE=BrowserDetect.browser == 'Explorer';
console.log("BrowserDetect",BrowserDetect.browser);
  if (window.isIE){
  CSSStyleDeclaration.prototype.getProperty = function(a) {
					return this.getAttribute(a);
				};
			CSSStyleDeclaration.prototype.setProperty = function(a,b) {
				return this.setAttribute(a,b);
			}
			CSSStyleDeclaration.prototype.removeProperty = function(a) {
				return this.removeAttribute(a);
			}
  
  }
  //-Data Processing 
  var rawData= ${data};
  var f=view.typeinfo.data.fields;
  //Inital debugFn() for data Processing 
  var arrToHex,getArr,cutTableName,hexToModel,insertLineBreakContent;
  debugFn();
  
  var numberOfLevel;
  console.log("rawData",JSON.stringify(rawData));
  if (view.data.jsonClass != "DataEmbedded"){
  var data1=arrToHex(rawData,f,view);}
   
   
    if (view.data.jsonClass === "DataEmbedded"){
  var data2=[{"Item_PK":1,"Description":"Watermelon","ColorBasis":259,
  "ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],
  "content#1":2000,"level#1":"Thailand"},{"Item_PK":2,"Description":"Apple","ColorBasis":375,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":25000,"level#1":"Thailand"},{"Item_PK":3,"Description":"Onion","ColorBasis":894,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":10500,"level#1":"Malaysia"},{"Item_PK":4,"Description":"Carrot","ColorBasis":417,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":20410,"level#1":"Malaysia"},{"Item_PK":5,"Description":"Pear","ColorBasis":657,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":6800,"level#1":"Malaysia"},{"Item_PK":6,"Description":"Keyboard","ColorBasis":517,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":7800,"level#1":"Japan"},{"Item_PK":7,"Description":"Mouse","ColorBasis":789,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":1800,"level#1":"Japan"},{"Item_PK":8,"Description":"Desktop","ColorBasis":841,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":3570,"level#1":"USA"},{"Item_PK":9,"Description":"Laptop","ColorBasis":985,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":15000,"level#1":"USA"},{"Item_PK":10,"Description":"Tablet","ColorBasis":657,"ContentInfo":[{"id":"Size","columnName":"Size"}],"LevelInfo":[{"id":"1","columnName":"Category"}],"content#1":18000,"level#1":"USA"}];
  }else var data2 =hexToModel(data1);
  console.log('data2',JSON.stringify(data2));
 
	selectBoxFn(data2[0].ContentInfo); // append selectBox
  var numberOfLevelIndex=0; //count the numberOfLevel
  var groupColorBasis=0;
  var groupResult=_.chain(data2).groupBy("Item_PK")
					.map(function(value,key){
  var obj={
					Item_PK:value[0].Item_PK,
					Description:value[0].Description,
  					ColorBasis:value[0].ColorBasis,
  					ContentInfo:value[0].ContentInfo,
  					LevelInfo:value[0].LevelInfo,
  					name:value[0][cellName]
  										};
  
  for (var propertyName in value[0]) {
  
 
  if (_.str.include(propertyName,"content#")) {
  obj[propertyName]=sum(_.pluck(value, propertyName));
  } else if  (_.str.include(propertyName,"level#")) {
 
  obj[propertyName]= value[0][propertyName];
   if(groupColorBasis==0) numberOfLevelIndex++;
  } 
  
  }
  groupColorBasis++;
					return obj;
					
					}).value();

console.log("groupResult",JSON.stringify(groupResult));
  var nest=d3.nest();
    _.each(_.range(1,numberOfLevelIndex+1),function(m,n) {
  var levelProp='level#'+m;
  nest.key(function(d){
  return d[levelProp];
  });
  });
  console.log("test",_.range(1,1),'length: ',_.size(_.range(1,1)));
	nest=nest.entries(groupResult);

  var jsonstr = JSON.stringify(nest);
 console.log("jsonStr",jsonstr);
  var new_jsonstr = jsonstr.replace('"key"','"name"','gi');
   var new_jsonstr2 = new_jsonstr.replace('"values"','"children"','gi');
  
  var nest_1 = JSON.parse(new_jsonstr2);
  console.log("nest_1",JSON.stringify(nest_1));
  var nest_2 ={"name":cfgoptions.title, "children": nest_1};
//-end Data Processing

//Initialize TreeMap

    var treemap = d3.layout.treemap()
        .round(false)
        .size([chartWidth, chartHeight])
        .sticky(true)
        .value(function(d) {
            return d['content#1'];
        });
	
   //render Chart
  chart = treeMapChart()
  .height(chartHeight)
  .width(chartWidth)
  .labelHeight(labelHeight)
  .labelWidth(labelWidth)
  .xscale(xscale)
  .yscale(yscale)
  .color(color)
  .headerHeight(headerHeight)
  .headerColor(headerColor)
  .transitionDuration(transitionDuration)
  .viewId(viewId)
  .root(nest_2)
  .insertLineBreakContent(insertLineBreakContent)
  .treemap(treemap)
  .prefix(prefixMagnitude)
  .formatValue(formatValue);
  d3.select("#${id}").datum([]).call(chart);
  

  
  function debugFn(){
  
   arrToHex =function(data, f, view) { //used together with operations
 	 var keyLength = f.keys.length;
      var keyLArr = d3.range(1, keyLength+1);
    var nameArr = getArr(f, 'name', view);
    console.log("nameArr", nameArr);
    var idArr = getArr(f, 'id', view);
    console.log("idArr:", JSON.stringify(idArr));
    var processedIdArr = [];
  	var keyIdArr=[];
	var idBool=true;
    _.each(idArr, function(d, i) {
	  if (_.str.include(d,"#{") == true || _.str.include(d,"|") == true) {
            processedIdArr.push(d);
  } else  {
 if (idBool){  _.each(keyLArr,function(m,n) {
  processedIdArr.push("$["+m+"]"); //for Levels, perform only once
    });
	idBool=false;
	}
  processedIdArr.push("#[" + d + "]"); //for contents

  }
    });
    var combineArr = [];
    processedIdArr.forEach(function(d, i) {

        if (i === 0) {
            var obj = 'Item_PK' + d;
        } else if (i === 1) {
            var obj = 'Description' + d;
        }   else if (i === 2) {
            var obj = 'ColorBasis' + d;
          }  
    if (i > 2 && i <= 2+keyLength ) var obj = nameArr[i] + d;
    else if (i> 2+keyLength) { var obj = nameArr[i] + d;
    }
        combineArr.push(obj);
    })
    var globalArr = [];
    data.forEach(function(d, i) {
        var localObj = _.object(combineArr, d);
        globalArr.push(localObj);
    })
    return globalArr;

};
  getArr=function(obj, k, view) { //used on view.typeinfo to get an array of property value of the propertyName 'name'
    var objects = [];
    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) continue;
        if (typeof obj[i] == 'object') {
            objects = objects.concat(getArr(obj[i], k, view));
        } else if ( _.str.include(i,k) == true) {
            if (k == "name") {
                objects.push(cutTableName(obj[i], view));
            } else
                objects.push(obj[i]);
        }
    }
    return objects;
};
  cutTableName=function(stringText, view) {

    var uniTable = (view.data.jsonClass === "DataAdhocTable") ? view.data.fields[0].table + "." : null;
    var colm = (uniTable == null) ? stringText : stringText.split(uniTable)[1];
    return colm;
};
  hexToModel=function(data) {
    var ReadArray, columnNameArray, model_keyArray, objKey;
    ReadArray = [];
    objKey = Object.keys(data[0]);
  var model_keyArray=[];
  var contentInfoArray=[];
  var contentColumnArray=[];
  var levelInfoArray=[];
  var levelColumnArray=[];
     objKey.forEach(function(key) {
        var columnNameObj, model_keyObj;
  if (_.str.include(key,"#[") === true) { // belongs to content
            model_keyObj = key.replace(/.*\[|\]/g, "");
            columnNameObj = key.replace(/\#.*/, "");
 			contentInfoArray.push(model_keyObj);
  			contentColumnArray.push(columnNameObj);
  } else if (_.str.include(key,"$[")=== true) { //belongs to Level
  			 model_keyObj = key.replace(/.*\[|\]/g, "");
            columnNameObj = key.replace(/\$.*/, "");
  			levelInfoArray.push(model_keyObj);
  			levelColumnArray.push(columnNameObj);
  } 
      
    });

    data.forEach(function(d, i) {
       var  Model, ReadObj, Value, nestingLevelArr, propertyName;
  		var contentArr=[];
   		
        ReadObj = {};
   		nestingLevelArr =[];
     
  if(i===0) console.log("d!!",JSON.stringify(d));
        for (propertyName in d) {
                  if (_.str.include(propertyName,"$[") === true) {
                  nestingLevelArr.push(d[propertyName]);
            }
       if (_.str.include(propertyName,"#[") === true) {
	   
                  contentArr.push(d[propertyName]);
				            }
        }
            var objPush;
            for (propertyName in d) {
                        objPush = {
                        Item_PK: d['Item_PK|'],
 					    Description:d['Description|'],
                        ColorBasis:d['ColorBasis|'],
  						ContentInfo:[],LevelInfo:[]
                    };
                    _.each(contentArr,function(d, i) {
                        propertyName = "content#" + (i + 1);
                        objPush[propertyName] = d;
 					 var contentObj={'id':contentInfoArray[i],'columnName':contentColumnArray[i]};
  						objPush['ContentInfo'].push(contentObj);
                    });
     				_.each(nestingLevelArr,function(d, i) {
                        propertyName = "level#" + (i + 1);
                        objPush[propertyName] = d;
   					var infoObj={'id':levelInfoArray[i],'columnName':levelColumnArray[i]};
  						objPush['LevelInfo'].push(infoObj);
                    });
                   
                
            }
  			ReadArray.push(objPush);
        
    });
    return ReadArray;
};
  insertLineBreakContent = function (d,formatValue,target) {
    var el = d3.select(target);
    var words = [];
	  words.push(d.name);
  if (typeof d.Description !='undefined') {
  words.push(d.Description);
  }
   var contentSize=_.size(d.ContentInfo);
   	if(contentSize > 0){_.each(d.ContentInfo,function(m,n) {
  var j=n+1;
  words.push(m.id+": "+formatValue[m.id](d['content#'+j]));
  });}
 
    el.text('');
	
    for (var i = 0; i < words.length; i++) {
        var tspan = el.append('tspan').text(words[i]);
        if (i > 0)
            tspan.attr('x', 0).attr('dy', '15');
    }
};
selectBoxFn=function(contentInfo) {
  //d3 append into 'header' selection 
  var selectBox=d3.select(".header_"+viewId).append("select").attr("class","select_"+viewId);
  _.each(contentInfo,function(m,n){
  selectBox.append("option").attr("value","content#"+(n+1)).html(m.id);
  });
};
  }
    function sum(numbers) {
    return _.reduce(numbers, function(result, current) {
        return result + parseFloat(current);
    }, 0);
}
</div>
========